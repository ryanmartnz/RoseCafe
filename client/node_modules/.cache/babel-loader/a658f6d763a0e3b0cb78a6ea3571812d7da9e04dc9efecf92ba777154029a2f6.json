{"ast":null,"code":"import { toast, Slide } from 'react-toastify';\nexport const addToCart = async (productId, productName, productSize, cartNumChange) => {\n  const body = {\n    \"product_id\": productId,\n    \"product_name\": productName,\n    \"product_size\": productSize,\n    \"quantity\": 1\n  };\n  const response = await fetch(`http://localhost:3001/cart/add-to-cart`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body),\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    await response.json();\n    cartNumChange(1);\n    toast.dismiss();\n    toast(`${productName} Added to Your Cart`, {\n      className: \"added-to-cart-message\",\n      position: \"bottom-center\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n      transition: Slide\n    });\n  } else if (response.status === 403) {\n    cartErrorMessage();\n  }\n};\nexport const removeFromCart = async (productId, productSize, cartNumChange) => {\n  const body = {\n    \"product_id\": productId,\n    \"product_size\": productSize,\n    \"quantity\": 1\n  };\n  const response = await fetch(`http://localhost:3001/cart/remove-from-cart`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body),\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    await response.json();\n    cartNumChange(-1);\n    return true;\n  } else if (response.status === 403) {\n    alert(\"You must be logged in to remove items from your cart!\");\n    return false;\n  }\n};\nexport const updateCartItemAmount = async (productId, productSize, newQuantity, cartSetNum) => {\n  const body = {\n    \"product_id\": productId,\n    \"product_size\": productSize,\n    \"quantity\": newQuantity\n  };\n  const response = await fetch(`http://localhost:3001/cart/update-quantity`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body),\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    await response.json();\n    cartSetNum(+newQuantity);\n    return true;\n  } else if (response.status === 403) {\n    alert(\"You must be logged in to add/remove items from your cart!\");\n    return false;\n  }\n};\nconst cartErrorMessage = () => {\n  toast.dismiss();\n  toast.error('You must be logged in to make changes to your cart!', {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\",\n    transition: Slide\n  });\n};","map":{"version":3,"names":["toast","Slide","addToCart","productId","productName","productSize","cartNumChange","body","response","fetch","method","headers","JSON","stringify","credentials","ok","json","dismiss","className","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","status","cartErrorMessage","removeFromCart","alert","updateCartItemAmount","newQuantity","cartSetNum","error"],"sources":["/Users/ryanmartinez/Coding/PERN_project/client/src/utils/cartFunctions.js"],"sourcesContent":["import { toast, Slide } from 'react-toastify';\n\nexport const addToCart = async (productId, productName, productSize, cartNumChange) => {\n    const body = {\n        \"product_id\": productId, \n        \"product_name\": productName,\n        \"product_size\": productSize, \n        \"quantity\": 1\n    };\n    const response = await fetch(`http://localhost:3001/cart/add-to-cart`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n        credentials: \"include\"\n    });\n\n    if(response.ok) {\n        await response.json();\n        cartNumChange(1);\n        toast.dismiss();\n        toast(`${productName} Added to Your Cart`, {\n            className: \"added-to-cart-message\",\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n            transition: Slide\n        });\n    } else if(response.status === 403) {\n        cartErrorMessage();\n    }\n};\n\nexport const removeFromCart = async (productId, productSize, cartNumChange) => {\n    const body = {\n        \"product_id\": productId, \n        \"product_size\": productSize, \n        \"quantity\": 1\n    };\n    const response = await fetch(`http://localhost:3001/cart/remove-from-cart`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n        credentials: \"include\"\n    });\n\n    if(response.ok) {\n        await response.json();\n        cartNumChange(-1);\n        return true;\n    } else if(response.status === 403) {\n        alert(\"You must be logged in to remove items from your cart!\");\n        return false;\n    }\n};\n\nexport const updateCartItemAmount = async (productId, productSize, newQuantity, cartSetNum) => {\n    const body = {\n        \"product_id\": productId, \n        \"product_size\": productSize, \n        \"quantity\": newQuantity\n    };\n    const response = await fetch(`http://localhost:3001/cart/update-quantity`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n        credentials: \"include\"\n    });\n\n    if(response.ok) {\n        await response.json();\n        cartSetNum(+newQuantity);\n        return true;\n    } else if(response.status === 403) {\n        alert(\"You must be logged in to add/remove items from your cart!\");\n        return false;\n    }\n};\n\nconst cartErrorMessage = () => {\n    toast.dismiss();\n    toast.error('You must be logged in to make changes to your cart!', {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        transition: Slide,\n    });\n};"],"mappings":"AAAA,SAASA,KAAK,EAAEC,KAAK,QAAQ,gBAAgB;AAE7C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAEC,aAAa,KAAK;EACnF,MAAMC,IAAI,GAAG;IACT,YAAY,EAAEJ,SAAS;IACvB,cAAc,EAAEC,WAAW;IAC3B,cAAc,EAAEC,WAAW;IAC3B,UAAU,EAAE;EAChB,CAAC;EACD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;IACnEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,IAAGN,QAAQ,CAACO,EAAE,EAAE;IACZ,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACrBV,aAAa,CAAC,CAAC,CAAC;IAChBN,KAAK,CAACiB,OAAO,CAAC,CAAC;IACfjB,KAAK,CAAC,GAAGI,WAAW,qBAAqB,EAAE;MACvCc,SAAS,EAAE,uBAAuB;MAClCC,QAAQ,EAAE,eAAe;MACzBC,SAAS,EAAE,IAAI;MACfC,eAAe,EAAE,IAAI;MACrBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAEC,SAAS;MACnBC,KAAK,EAAE,OAAO;MACdC,UAAU,EAAE3B;IAChB,CAAC,CAAC;EACN,CAAC,MAAM,IAAGO,QAAQ,CAACqB,MAAM,KAAK,GAAG,EAAE;IAC/BC,gBAAgB,CAAC,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAO5B,SAAS,EAAEE,WAAW,EAAEC,aAAa,KAAK;EAC3E,MAAMC,IAAI,GAAG;IACT,YAAY,EAAEJ,SAAS;IACvB,cAAc,EAAEE,WAAW;IAC3B,UAAU,EAAE;EAChB,CAAC;EACD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;IACxEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,IAAGN,QAAQ,CAACO,EAAE,EAAE;IACZ,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACrBV,aAAa,CAAC,CAAC,CAAC,CAAC;IACjB,OAAO,IAAI;EACf,CAAC,MAAM,IAAGE,QAAQ,CAACqB,MAAM,KAAK,GAAG,EAAE;IAC/BG,KAAK,CAAC,uDAAuD,CAAC;IAC9D,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAO9B,SAAS,EAAEE,WAAW,EAAE6B,WAAW,EAAEC,UAAU,KAAK;EAC3F,MAAM5B,IAAI,GAAG;IACT,YAAY,EAAEJ,SAAS;IACvB,cAAc,EAAEE,WAAW;IAC3B,UAAU,EAAE6B;EAChB,CAAC;EACD,MAAM1B,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;IACvEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,IAAGN,QAAQ,CAACO,EAAE,EAAE;IACZ,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACrBmB,UAAU,CAAC,CAACD,WAAW,CAAC;IACxB,OAAO,IAAI;EACf,CAAC,MAAM,IAAG1B,QAAQ,CAACqB,MAAM,KAAK,GAAG,EAAE;IAC/BG,KAAK,CAAC,2DAA2D,CAAC;IAClE,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,MAAMF,gBAAgB,GAAGA,CAAA,KAAM;EAC3B9B,KAAK,CAACiB,OAAO,CAAC,CAAC;EACfjB,KAAK,CAACoC,KAAK,CAAC,qDAAqD,EAAE;IAC/DjB,QAAQ,EAAE,WAAW;IACrBC,SAAS,EAAE,IAAI;IACfC,eAAe,EAAE,IAAI;IACrBC,YAAY,EAAE,IAAI;IAClBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE,IAAI;IACfC,QAAQ,EAAEC,SAAS;IACnBC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE3B;EAChB,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}