{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmartinez/Coding/PERN_project/client/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\"\n  });\n  const {\n    first_name,\n    last_name,\n    email,\n    phone,\n    password\n  } = inputs;\n  const onChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-5\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        placeholder: \"First Name\",\n        className: \"form-control my-3\",\n        value: first_name,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        placeholder: \"Last Name\",\n        className: \"form-control my-3\",\n        value: last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n        placeholder: \"Phone Number\",\n        required: true,\n        className: \"form-control my-3\",\n        value: phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        className: \"form-control my-3\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        className: \"form-control my-3\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-block\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"LjSa3jH+izgPi9kTvF/L2y1smGI=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Fragment","useState","jsxDEV","_jsxDEV","Register","_s","inputs","setInputs","first_name","last_name","email","phone","password","onChange","e","target","name","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","pattern","required","_c","$RefreshReg$"],"sources":["/Users/ryanmartinez/Coding/PERN_project/client/src/components/Register.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\n\nconst Register = () => {\n    const [inputs, setInputs] = useState({\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\"\n    });\n\n    const {first_name, last_name, email, phone, password} = inputs;\n\n    const onChange = (e) => {\n        setInputs({\n            ...inputs, \n            [e.target.name] : e.target.value\n        });\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"text-center my-5\">Register</h1>\n            <form>\n                <input \n                    type=\"text\" \n                    name=\"first_name\" \n                    placeholder=\"First Name\" \n                    className=\"form-control my-3\"\n                    value={first_name}\n                    onChange={e => onChange(e)}\n                />\n                <input \n                    type=\"text\" \n                    name=\"last_name\" \n                    placeholder=\"Last Name\" \n                    className=\"form-control my-3\" \n                    value={last_name}\n                />\n                <input \n                    type=\"tel\" \n                    name=\"phone\" \n                    pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" \n                    placeholder=\"Phone Number\" \n                    required \n                    className=\"form-control my-3\" \n                    value={phone}\n                />\n                <input \n                    type=\"email\" \n                    name=\"email\" \n                    placeholder=\"Email\" \n                    className=\"form-control my-3\" \n                    value={email}\n                />\n                <input \n                    type=\"password\" \n                    name=\"password\" \n                    placeholder=\"Password\" \n                    className=\"form-control my-3\" \n                    value={password}\n                />\n                <button className=\"btn btn-success btn-block\">Submit</button>\n            </form>\n        </Fragment>\n    );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}