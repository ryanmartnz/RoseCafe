{"ast":null,"code":"export const addToCart = async (productId, productName, productSize, cartNumChange) => {\n  const body = {\n    \"product_id\": productId,\n    \"product_name\": productName,\n    \"product_size\": productSize,\n    \"quantity\": 1\n  };\n  const response = await fetch(`http://localhost:3001/cart/add-to-cart`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body),\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    await response.json();\n    cartNumChange(1);\n    return true;\n  } else if (response.status === 403) {\n    return false;\n  }\n};\nexport const removeFromCart = async (productId, productSize, cartNumChange) => {\n  const body = {\n    \"product_id\": productId,\n    \"product_size\": productSize,\n    \"quantity\": 1\n  };\n  const response = await fetch(`http://localhost:3001/cart/remove-from-cart`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body),\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    await response.json();\n    cartNumChange(-1);\n    return true;\n  } else if (response.status === 403) {\n    alert(\"You must be logged in to remove items from your cart!\");\n    return false;\n  }\n};\nexport const updateCartItemAmount = async (productId, productSize, newQuantity, cartSetNum) => {\n  const body = {\n    \"product_id\": productId,\n    \"product_size\": productSize,\n    \"quantity\": newQuantity\n  };\n  const response = await fetch(`http://localhost:3001/cart/update-quantity`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body),\n    credentials: \"include\"\n  });\n  if (response.ok) {\n    await response.json();\n    cartSetNum(+newQuantity);\n    return true;\n  } else if (response.status === 403) {\n    alert(\"You must be logged in to add/remove items from your cart!\");\n    return false;\n  }\n};","map":{"version":3,"names":["addToCart","productId","productName","productSize","cartNumChange","body","response","fetch","method","headers","JSON","stringify","credentials","ok","json","status","removeFromCart","alert","updateCartItemAmount","newQuantity","cartSetNum"],"sources":["/Users/ryanmartinez/Coding/PERN_project/client/src/utils/cartFunctions.js"],"sourcesContent":["export const addToCart = async (productId, productName, productSize, cartNumChange) => {\n    const body = {\n        \"product_id\": productId, \n        \"product_name\": productName,\n        \"product_size\": productSize, \n        \"quantity\": 1\n    };\n    const response = await fetch(`http://localhost:3001/cart/add-to-cart`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n        credentials: \"include\"\n    });\n\n    if(response.ok) {\n        await response.json();\n        cartNumChange(1);\n        return true;\n    } else if(response.status === 403) {\n        return false;\n    }\n};\n\nexport const removeFromCart = async (productId, productSize, cartNumChange) => {\n    const body = {\n        \"product_id\": productId, \n        \"product_size\": productSize, \n        \"quantity\": 1\n    };\n    const response = await fetch(`http://localhost:3001/cart/remove-from-cart`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n        credentials: \"include\"\n    });\n\n    if(response.ok) {\n        await response.json();\n        cartNumChange(-1);\n        return true;\n    } else if(response.status === 403) {\n        alert(\"You must be logged in to remove items from your cart!\");\n        return false;\n    }\n};\n\nexport const updateCartItemAmount = async (productId, productSize, newQuantity, cartSetNum) => {\n    const body = {\n        \"product_id\": productId, \n        \"product_size\": productSize, \n        \"quantity\": newQuantity\n    };\n    const response = await fetch(`http://localhost:3001/cart/update-quantity`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n        credentials: \"include\"\n    });\n\n    if(response.ok) {\n        await response.json();\n        cartSetNum(+newQuantity);\n        return true;\n    } else if(response.status === 403) {\n        alert(\"You must be logged in to add/remove items from your cart!\");\n        return false;\n    }\n};"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAAA,CAAOC,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAEC,aAAa,KAAK;EACnF,MAAMC,IAAI,GAAG;IACT,YAAY,EAAEJ,SAAS;IACvB,cAAc,EAAEC,WAAW;IAC3B,cAAc,EAAEC,WAAW;IAC3B,UAAU,EAAE;EAChB,CAAC;EACD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;IACnEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,IAAGN,QAAQ,CAACO,EAAE,EAAE;IACZ,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACrBV,aAAa,CAAC,CAAC,CAAC;IAChB,OAAO,IAAI;EACf,CAAC,MAAM,IAAGE,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;IAC/B,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOf,SAAS,EAAEE,WAAW,EAAEC,aAAa,KAAK;EAC3E,MAAMC,IAAI,GAAG;IACT,YAAY,EAAEJ,SAAS;IACvB,cAAc,EAAEE,WAAW;IAC3B,UAAU,EAAE;EAChB,CAAC;EACD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;IACxEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,IAAGN,QAAQ,CAACO,EAAE,EAAE;IACZ,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACrBV,aAAa,CAAC,CAAC,CAAC,CAAC;IACjB,OAAO,IAAI;EACf,CAAC,MAAM,IAAGE,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;IAC/BE,KAAK,CAAC,uDAAuD,CAAC;IAC9D,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOjB,SAAS,EAAEE,WAAW,EAAEgB,WAAW,EAAEC,UAAU,KAAK;EAC3F,MAAMf,IAAI,GAAG;IACT,YAAY,EAAEJ,SAAS;IACvB,cAAc,EAAEE,WAAW;IAC3B,UAAU,EAAEgB;EAChB,CAAC;EACD,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;IACvEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,IAAGN,QAAQ,CAACO,EAAE,EAAE;IACZ,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACrBM,UAAU,CAAC,CAACD,WAAW,CAAC;IACxB,OAAO,IAAI;EACf,CAAC,MAAM,IAAGb,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;IAC/BE,KAAK,CAAC,2DAA2D,CAAC;IAClE,OAAO,KAAK;EAChB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}